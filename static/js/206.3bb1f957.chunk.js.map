{"version":3,"file":"static/js/206.3bb1f957.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactFormAdd/ContactFormAdd.module.css?0b1b","redux/contacts/selectors.js","hooks/useContacts.js","components/ContactFormAdd/ContactFormAdd.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/ContactsList/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactFormAdd_container__g+ifA\",\"form\":\"ContactFormAdd_form__JfbOl\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectResultContact = createSelector(\n  selectContacts,\n  selectFilter,\n  (items, valueFilter) =>\n    items.filter(({ name }) =>\n      name.toLowerCase().includes(valueFilter.toLowerCase())\n    )\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectResultContact,\n} from '../redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const contactsAndFilter = useSelector(selectResultContact);\n\n  return {\n    contacts,\n    isLoading,\n    error,\n    filter,\n    contactsAndFilter,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactFormAdd.module.css';\nimport { addContact } from '../../redux/contacts/operations';\nimport { IoPersonAddOutline } from 'react-icons/io5';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactFormAdd = () => {\n  const dispatch = useDispatch();\n  const { contacts } = useContacts();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value.trim();\n    const number = e.currentTarget.elements.number.value.trim();\n\n    const validForm = contacts.some(function (element) {\n      return (\n        element.name.toLowerCase() === name.toLowerCase() ||\n        element.phone === number\n      );\n    });\n    \n    if (validForm) {\n      alert('The contact is already in your book');\n    } else {\n      dispatch(\n        addContact({\n          name: name,\n          number: number,\n        })\n      );\n      e.currentTarget.reset();\n    }\n  };\n\n  return (\n    <>\n      <h2>Create contact</h2>\n      <div className={styles.form}>\n        <div>\n          <form onSubmit={handleSubmit} className={styles.form}>\n            <label>\n              <input placeholder=\"Name\" type=\"text\" name=\"name\" required />\n            </label>\n\n            <label>\n              <input\n                placeholder=\"Phone number\"\n                type=\"tel\"\n                name=\"number\"\n                required\n              />\n            </label>\n\n            <button type=\"submit\">\n              <IoPersonAddOutline />\n            </button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list__box\":\"ContactsList_list__box__no-st\",\"list\":\"ContactsList_list__mmE3Y\",\"list__box_contact\":\"ContactsList_list__box_contact__CGxy-\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal__backdrop\":\"Modal_modal__backdrop__Bvr-f\",\"modal__box\":\"Modal_modal__box__YRX0y\",\"form\":\"Modal_form__FEIVf\"};","import { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { UpdateInExistingContact } from '../../redux/contacts/operations';\n\nconst modalRoot = document.querySelector('#modal__root');\n\nexport const Modal = ({ item, toogle }) => {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: item.name, number: item.number });\n\n  const { name, number } = form;\n  const handleChange = ({ target: { name, value } }) => {\n    setForm(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newObj = { name, number, id: item.id };\n    dispatch(UpdateInExistingContact(newObj));\n    toogle();\n  };\n\n  return createPortal(\n    <div className={styles.modal__backdrop}>\n      <div className={styles.modal__box}>\n        <form\n          className={styles.form}\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              autoComplete=\"name\"\n              onChange={handleChange}\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              type=\"phone\"\n              name=\"number\"\n              value={number}\n              autoComplete=\"phone\"\n              onChange={handleChange}\n            />\n          </label>\n          <button type=\"submit\">Edit contact</button>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n","import React, { useState } from 'react';\nimport styles from '../ContactsList.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { VscEdit } from 'react-icons/vsc';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\n\nexport const ContactListItem = ({ item }) => {\n  const dispatch = useDispatch();\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toogle = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <>\n      <li key={item.id} className={styles.list}>\n        <div className={styles.list__box_contact}>\n          <b>{item.name}</b> <b>{item.number}</b>\n        </div>\n        <button type=\"button\" onClick={toogle}>\n          <VscEdit />\n        </button>\n        <button type=\"button\" onClick={() => handleDelete(item.id)}>\n          <AiOutlineUserDelete />\n        </button>\n      </li>\n      {showModal && <Modal item={item} toogle={toogle} />}\n    </>\n  );\n};\n","import { useContacts } from 'hooks/useContacts';\nimport styles from './ContactsList.module.css';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\n\nexport const ContactsList = () => {\n  const { contacts, contactsAndFilter } = useContacts();\n\n  return (\n    <>\n      <h3>Your phonebook has {contacts.length} contacts</h3>\n      {contactsAndFilter.length > 0 ? (\n        <h3>contacts found {contactsAndFilter.length} </h3>\n      ) : (\n        <h3>Contact not found</h3>\n      )}\n      <ul className={styles.list__box}>\n        {contactsAndFilter.map(item => (\n          <ContactListItem key={item.id} item={item} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks/useContacts';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useContacts();\n  const showFilteredContacts = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div>\n      <h2>Filter</h2>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"Find contacts by name...\"\n          value={filter}\n          onChange={showFilteredContacts}\n        />\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ContactFormAdd } from 'components/ContactFormAdd/ContactFormAdd';\nimport { useContacts } from '../hooks/useContacts';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Modal } from 'components/Modal/Modal';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, showModal } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"contact\">\n        <div className=\"contact__form_box\">\n          <ContactFormAdd />\n          <Filter />\n          {isLoading && <h2>Request in progress...</h2>}\n          {showModal && <Modal />}\n          <ContactsList />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectResultContact","createSelector","valueFilter","_ref","name","toLowerCase","includes","useContacts","useSelector","contactsAndFilter","ContactFormAdd","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","className","styles","onSubmit","e","preventDefault","currentTarget","elements","value","trim","number","some","element","phone","alert","addContact","reset","placeholder","type","required","IoPersonAddOutline","modalRoot","document","querySelector","Modal","item","toogle","_useState","useState","_useState2","_slicedToArray","form","setForm","handleChange","_ref2","_ref2$target","target","prevState","_objectSpread","_defineProperty","createPortal","newObj","id","UpdateInExistingContact","autoComplete","onChange","ContactListItem","showModal","setShowModal","onClick","VscEdit","deleteContact","AiOutlineUserDelete","ContactsList","_useContacts","length","map","Filter","setFilter","useEffect","fetchContacts"],"sourceRoot":""}