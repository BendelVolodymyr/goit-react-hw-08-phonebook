{"version":3,"file":"static/js/199.01d379cd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactFormAdd/ContactFormAdd.module.css?0b1b","components/ContactFormAdd/ContactFormAdd.jsx","redux/contacts/selectors.js","hooks/useContacts.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactFormAdd_container__g+ifA\",\"form\":\"ContactFormAdd_form__JfbOl\"};","import { useDispatch } from 'react-redux';\nimport styles from './ContactFormAdd.module.css';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport const ContactFormAdd = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value.trim();\n    const number = e.currentTarget.elements.number.value.trim();\n    const validForm = name === '' || number === '';\n\n    if (!validForm) {\n      dispatch(\n        addContact({\n          name: name,\n          number: number,\n        })\n      );\n      e.currentTarget.reset();\n    } else {\n      alert('Друже поле не може бути пустим');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label>\n          <input placeholder=\"Name\" type=\"text\" name=\"name\" required />\n        </label>\n\n        <label>\n          <input placeholder=\"Phone number\" type=\"tel\" name=\"number\" required />\n        </label>\n\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    </>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectShowModal = state => state.modal.showModal;\n\nexport const selectItemsModal = state => state.modal.item;\n\nexport const selectResultContact = createSelector(\n  selectContacts,\n  selectFilter,\n  (items, valueFilter) =>\n    items.filter(({ name }) =>\n      name.toLowerCase().includes(valueFilter.toLowerCase())\n    )\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectItemsModal,\n  selectResultContact,\n  selectShowModal,\n} from '../redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showModal = useSelector(selectShowModal);\n  const filter = useSelector(selectFilter);\n  const contactsAndFilter = useSelector(selectResultContact);\n  const itemModal = useSelector(selectItemsModal);\n\n  return {\n    contacts,\n    isLoading,\n    error,\n    showModal,\n    filter,\n    contactsAndFilter,\n    itemModal,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list__box\":\"ContactsList_list__box__no-st\",\"list\":\"ContactsList_list__mmE3Y\"};","import { useContacts } from 'hooks/useContacts';\nimport styles from './ContactsList.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { setShowModal } from '../../redux/contacts/showModal';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const { contacts, contactsAndFilter } = useContacts();\n\n  const handleRemove = item => {\n    dispatch(setShowModal(item));\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <h3>Your phonebook has {contacts.length} contacts</h3>\n      {contactsAndFilter.length > 0 ? (\n        <h3>contacts found {contactsAndFilter.length} </h3>\n      ) : (\n        <h3>Contact not found</h3>\n      )}\n      <ul className={styles.list__box}>\n        {contactsAndFilter.map(item => (\n          <li key={item.id} className={styles.list}>\n            <p>\n              <b>{item.name}</b> <b>{item.number}</b>\n            </p>\n            <button type=\"button\" onClick={() => handleRemove(item)}>\n              Edit\n            </button>\n            <button type=\"button\" onClick={() => handleDelete(item.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modal__backdrop\":\"Modal_modal__backdrop__Bvr-f\",\"modal__box\":\"Modal_modal__box__YRX0y\",\"form\":\"Modal_form__FEIVf\",\"label\":\"Modal_label__A0H75\"};","import { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\nimport { useContacts } from '../../hooks/useContacts';\nimport { useDispatch } from 'react-redux';\nimport { setShowModal } from '../../redux/contacts/showModal';\nimport { useEffect } from 'react';\nimport { UpdateInExistingContact } from '../../redux/contacts/operations';\n\nconst modalRoot = document.querySelector('#modal__root');\n\nexport const Modal = () => {\n  const { itemModal } = useContacts();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        return dispatch(setShowModal({ id: null, name: null, number: null }));\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleDropClick = e => {\n    if (e.currentTarget === e.target) {\n      dispatch(setShowModal({ id: null, name: null, number: null }));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value.trim();\n    const number = e.currentTarget.elements.number.value.trim();\n\n    const objectToApi = { id: itemModal.id, name: name, number: number };\n\n    const validForm = name === '' || number === '';\n\n    if (!validForm) {\n      dispatch(UpdateInExistingContact(objectToApi));\n    } else {\n      alert('Друже поле не може бути пустим');\n    }\n  };\n\n  return createPortal(\n    <div className={styles.modal__backdrop} onClick={handleDropClick}>\n      <div className={styles.modal__box}>\n        <form\n          className={styles.form}\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              defaultValue={itemModal.name}\n              autoComplete=\"name\"\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              type=\"phone\"\n              name=\"number\"\n              defaultValue={itemModal.number}\n              autoComplete=\"phone\"\n            />\n          </label>\n          <button type=\"submit\">Edit contact</button>\n        </form>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n","import React from 'react';\nimport { ContactFormAdd } from 'components/ContactFormAdd/ContactFormAdd';\nimport { useContacts } from '../hooks/useContacts';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, showModal } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactFormAdd />\n      <div>{isLoading && 'Request in progress...'}</div>\n      {showModal && <Modal />}\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactFormAdd","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","name","currentTarget","elements","value","trim","number","alert","addContact","reset","className","styles","placeholder","type","required","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectShowModal","modal","showModal","selectItemsModal","item","selectResultContact","createSelector","valueFilter","_ref","toLowerCase","includes","useContacts","useSelector","contactsAndFilter","itemModal","ContactsList","_useContacts","length","map","onClick","setShowModal","handleRemove","id","deleteContact","modalRoot","document","querySelector","Modal","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","objectToApi","UpdateInExistingContact","autoComplete","defaultValue","fetchContacts","Helmet"],"sourceRoot":""}